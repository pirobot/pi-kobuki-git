<launch>

  <!-- ROBOT MAPPING VERSION: use this with ROS bag demo_mapping.bag -->
  <!-- WARNING : Database is automatically deleted on each startup -->
  <!--           See "delete_db_on_start" option below... -->

  <!-- Choose visualization -->
  <arg name="rviz" default="true" />
  <arg name="rtabmapviz" default="false" /> 
  <arg name="wait_for_transform_duration"  default="0.5"/>
  <arg name="localization"        default="false"/>
  <arg name="bag"                 default="true"/>
  
  <arg     if="$(arg localization)" name="rtabmap_args"  default=""/>
  <arg unless="$(arg localization)" name="rtabmap_args"  default="--delete_db_on_start"/>
  
  <arg name="database_path"           default="~/.ros/rtabmap.db"/>

  <group ns="rtabmap">
    <!-- SLAM (robot side) -->
    <!-- args: "delete_db_on_start" and "udebug" -->
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg rtabmap_args)" clear_params="true">
      <param name="database_path"        type="string" value="$(arg database_path)"/>

      <remap from="grid_map"  to="/map" />
      
	  <param name="frame_id" type="string" value="sibot/base_link"/>
	  <param name="wait_for_transform"  type="bool"   value="true"/>

	  <param name="wait_for_transform_duration"  type="double"   value="$(arg wait_for_transform_duration)"/>
	  
	  <param name="cloud_ceiling_culling_height"  type="double"   value="2.0"/>
	  
	  <!-- Pi Robot's laser scanner is upside down -->
      <!-- param name="flip_scan" type="bool" value="true"/ -->
      <param name="map_negative_poses_ignored" type="bool" value="true"/>

	  <param name="subscribe_depth" type="bool" value="true"/>
	  <param name="subscribe_scan" type="bool" value="true"/>
	
	  <remap from="odom" to="/sibot/odometry/local_filtered"/>
	  <remap from="scan" to="/sibot/filtered_sick_scan" />

      <remap from="rgb/image" to="/sibot/left/image_color" />
      <remap from="depth/image" to="/sibot/depth" />
      <remap from="rgb/camera_info" to="/sibot/left/image_color/camera_info" />
  	
      <param name="rgb/image_transport" type="string" value="compressed" if="$(arg bag)"/>
      <param name="rgb/image_transport" type="string" value="raw" unless="$(arg bag)"/>
      <param name="depth/image_transport" type="string" value="compressedDepth" if="$(arg bag)"/>
      <param name="depth/image_transport" type="string" value="raw" unless="$(arg bag)"/>

	  <!-- RTAB-Map's parameters: do "rosrun rtabmap rtabmap (double-dash)params" to see the list of available parameters. -->     
	  <param name="RGBD/NeighborLinkRefining" type="string" value="true"/>  <!-- Do odometry correction with consecutive laser scans -->
	  <param name="RGBD/ProximityBySpace"     type="string" value="true"/>  <!-- Local loop closure detection (using estimated position) with locations in WM -->
	  <param name="RGBD/ProximityByTime"      type="string" value="false"/> <!-- Local loop closure detection with locations in STM -->
	  <param name="RGBD/OptimizeFromGraphEnd" type="string" value="true"/>
	  <param name="Reg/Strategy"              type="string" value="1"/>     <!-- 0=Visual, 1=ICP, 2=Visual+ICP -->
	  <param name="Vis/InlierDistance"        type="string" value="0.1"/>   <!-- 3D visual words correspondence distance -->
	  <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/> <!-- Optimize graph from initial node so /map -> /odom transform will be generated -->
	  <param name="Optimizer/Slam2D"          type="string" value="true"/>
	  <param name="Reg/Force3DoF"             type="string" value="true"/>
	  
	  <!--
      <param name="Kp/MaxFeatures"            type="string" value="200"/>
      <param name="SURF/HessianThreshold"     type="string" value="1000"/>
      -->
	  
	  <!-- localization mode -->
	  <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
	  <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
	  <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/>
    </node>
    
    <!-- Visualisation RTAB-Map -->
    <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
  	  <param name="subscribe_depth" type="bool" value="true"/>
      <param name="subscribe_scan" type="bool" value="true"/>
      <param name="frame_id" type="string" value="sibot/base_link"/>
	  <param name="wait_for_transform_duration"  type="double"   value="$(arg wait_for_transform_duration)"/>
    
 	  <remap from="odom" to="/sibot/odometry/local_filtered"/>
	  <remap from="scan" to="/sibot/filtered_sick_scan" />

      <remap from="rgb/image" to="/sibot/left/image_color" />
      <remap from="depth/image" to="/sibot/depth" />
      <remap from="rgb/camera_info" to="/sibot/left/image_color/camera_info" />
  	
      <param name="rgb/image_transport" type="string" value="compressed" if="$(arg bag)"/>
      <param name="rgb/image_transport" type="string" value="raw" unless="$(arg bag)"/>
      <param name="depth/image_transport" type="string" value="compressedDepth" if="$(arg bag)"/>
      <param name="depth/image_transport" type="string" value="raw" unless="$(arg bag)"/>
    </node>
  </group>
  
  <!-- Visualisation RVIZ -->
  <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz" args="-d $(find piko_nav)/config/rtabmap.rviz" output="screen"/>
   <node pkg="nodelet" type="nodelet" name="points_xyzrgb" args="standalone rtabmap_ros/point_cloud_xyzrgb">
 
 	  <remap from="odom" to="/sibot/odometry/local_filtered"/>
	  <remap from="scan" to="/sibot/filtered_sick_scan" />

      <remap from="rgb/image" to="/sibot/left/image_color" />
      <remap from="depth/image" to="/sibot/depth" />
      <remap from="rgb/camera_info" to="/sibot/left/image_color/camera_info" />
  	
      <param name="rgb/image_transport" type="string" value="compressed" if="$(arg bag)"/>
      <param name="rgb/image_transport" type="string" value="raw" unless="$(arg bag)"/>
      <param name="depth/image_transport" type="string" value="compressedDepth" if="$(arg bag)"/>
      <param name="depth/image_transport" type="string" value="raw" unless="$(arg bag)"/>
      
      <remap from="cloud"           to="voxel_cloud" />
    
      <param name="queue_size" type="int" value="10"/>
      <param name="voxel_size" type="double" value="0.01"/>
  </node>

</launch>
